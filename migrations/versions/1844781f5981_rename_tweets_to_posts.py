"""Rename tweets to posts

Revision ID: 1844781f5981
Revises: ca4667616408
Create Date: 2025-03-24 08:36:39.938430

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '1844781f5981'
down_revision = 'ca4667616408'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()

    # Create the posts table
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('twitter_id', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('media_attachments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('posted_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twitter_id')
    )

    # Transfer data from tweets to posts
    connection.execute(text("""
        INSERT INTO posts (id, twitter_id, user_id, text, media_attachments, created_at, scheduled_at, posted_at, status)
        SELECT id, twitter_id, user_id, text, media_attachments, created_at, scheduled_at, posted_at, status
        FROM tweets
    """))

    # Handle stream_results updates in the correct order
    with op.batch_alter_table('stream_results', schema=None) as batch_op:
        # First add the new columns
        batch_op.add_column(sa.Column('post_id', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('post_text', sa.Text(), nullable=True))

    # Then update the data
    connection.execute(text("""
        UPDATE stream_results
        SET post_id = tweet_id, post_text = tweet_text
    """))

    # Then modify the columns to be not nullable
    with op.batch_alter_table('stream_results', schema=None) as batch_op:
        # First make the new columns not nullable now that they have data
        batch_op.alter_column('post_id', nullable=False)
        batch_op.alter_column('post_text', nullable=False)

        # Then drop the old columns
        batch_op.drop_column('tweet_id')
        batch_op.drop_column('tweet_text')

    # Finally drop the old tweets table
    op.drop_table('tweets')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stream_results', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tweet_text', sa.TEXT(), nullable=False))
        batch_op.add_column(sa.Column('tweet_id', sa.VARCHAR(length=64), nullable=False))
        batch_op.drop_column('post_text')
        batch_op.drop_column('post_id')

    op.create_table('tweets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('twitter_id', sa.VARCHAR(length=64), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('media_attachments', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('scheduled_at', sa.DATETIME(), nullable=True),
    sa.Column('posted_at', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twitter_id')
    )
    op.drop_table('posts')
    # ### end Alembic commands ###
